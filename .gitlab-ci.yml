stages:
  - build
  - test
  - deploy_test
  - deploy_prod

variables:
  KUBECONFIG: "/builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/.kube/config"

before_script:
  - export KUBECONFIG=$KUBECONFIG

build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - cd src/Whisper
    - dotnet publish -c Release -o out
  artifacts:
    paths:
      - src/Whisper/out

test:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - cd src/Whisper
    - dotnet test

deploy_test:
  stage: deploy_test
  image: hashicorp/terraform:light
  services:
    - docker:dind
  before_script:
    - apk add --no-cache bash git openssh
    - curl -LO https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh && bash install_linux.sh
    - apk add --no-cache terraform
    - apk add --no-cache --update python3 && ln -sf python3 /usr/bin/python
    - python3 -m ensurepip
    - pip3 install --no-cache --upgrade pip setuptools
    - pip3 install awscli
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash
    - export NVM_DIR="$HOME/.nvm"
    - [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
    - nvm install 14
    - nvm use 14
    - npm install -g serverless
    - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
    - cd Terragrunt/live/test
  script:
    - terragrunt init
    - terragrunt apply -auto-approve
    - ../../scripts/migrate.sh
  environment:
    name: test
    url: http://test.example.com
  only:
    - merge_requests
    - main

deploy_prod:
  stage: deploy_prod
  image: hashicorp/terraform:light
  services:
    - docker:dind
  before_script:
    - apk add --no-cache bash git openssh
    - curl -LO https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh && bash install_linux.sh
    - apk add --no-cache terraform
    - apk add --no-cache --update python3 && ln -sf python3 /usr/bin/python
    - python3 -m ensurepip
    - pip3 install --no-cache --upgrade pip setuptools
    - pip3 install awscli
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash
    - export NVM_DIR="$HOME/.nvm"
    - [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
    - nvm install 14
    - nvm use 14
    - npm install -g serverless
    - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
    - cd Terragrunt/live/prod
  script:
    - terragrunt init
    - terragrunt apply -auto-approve
    - ../../scripts/migrate.sh
  environment:
    name: prod
    url: http://prod.example.com
  when: manual
  only:
    - main
